<Page x:Class="Promax.UI.ÜretimlerSayfası"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:Promax.UI"
      xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
      mc:Ignorable="d"
      Title="ÜretimlerSayfası" x:Name="uretimlerpage" Loaded="uretimlerpage_Loaded">
    <Page.Resources>
        <ControlTemplate x:Key="PopUpMenuItemtemplate" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="White" SnapsToDevicePixels="True">
                <Grid x:Name="Grid" Margin="-1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="13"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Border x:Name="GlyphPanel" BorderBrush="#FF26A0DA" BorderThickness="1" Background="#3D26A0DA" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                        <Path x:Name="Glyph" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="#FF212121" FlowDirection="LeftToRight" Height="11" Width="9"/>
                    </Border>
                    <ContentPresenter x:Name="ContentPresenter" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    <TextBlock x:Name="TextBlock" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                    <Path x:Name="RightArrow" Grid.Column="5" Data="M0,0L4,3.5 0,7z" Fill="#FF212121" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center"/>
                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3">
                        <Border x:Name="SubMenuBorder" BorderBrush="#FF999999" BorderThickness="1" Background="White" Padding="2">
                            <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <Grid x:Name="Grid1" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="Canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <Rectangle x:Name="Rectangle" Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="#FFCFCFCF"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{x:Null}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="Glyph" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="RightArrow" Value="#FF707070"/>
                </Trigger>
                <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="YanaAcilanMenuItem" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="White" SnapsToDevicePixels="True">
                <Grid Margin="-1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="13"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                        <ColumnDefinition Width="20"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                    <Border x:Name="GlyphPanel" BorderBrush="#FF26A0DA" BorderThickness="1" Background="White" ClipToBounds="False" HorizontalAlignment="Center" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                        <Path x:Name="Glyph" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="#FF212121" FlowDirection="LeftToRight" Height="11" Width="10"/>
                    </Border>
                    <ContentPresenter x:Name="menuHeaderContainer" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Grid.Column="2" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    <TextBlock x:Name="menuGestureText" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="#FFCFCFCF"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="{x:Null}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                    <Setter Property="Fill" TargetName="Glyph" Value="#FF707070"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsHighlighted" Value="True"/>
                        <Condition Property="IsEnabled" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" TargetName="templateRoot" Value="#0A000000"/>
                    <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21000000"/>
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Page.Resources>
    <Grid Name="anagrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="5"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid x:Name="grid" Grid.Row="0" Background="#FFF0F0F0" MinHeight="130">
            <Grid.RowDefinitions>
                <RowDefinition Height="24"/>
                <RowDefinition Height="35"/>
                <RowDefinition />
                <RowDefinition Height="35"/>
            </Grid.RowDefinitions>
            <TextBox Text="ÜRETİMLER" Background="#FFCEDEEC" BorderBrush="#FFBCBCBC" FontSize="14" FontWeight="Bold"/>
            <StackPanel Grid.Row="1" Orientation="Horizontal">
                <Button Click="CreateNewProduction" Style="{DynamicResource MainTabControlButtonStyle}">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image  Source="/Promax.UI;component/Pictures/Icons/plus_button.png" Margin="5" />
                            <TextBlock Text="Ekle" Padding="5"/>
                        </StackPanel>
                    </Button.Content>
                </Button>
                <Border Style="{StaticResource MainTabControlBorderStyle}"/>
                <Button Click="EditProduction" Style="{DynamicResource MainTabControlButtonStyle}">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image  Source="/Promax.UI;component/Pictures/Icons/pencil.png" Margin="5" />
                            <TextBlock Text="Düzelt" Padding="5"/>
                        </StackPanel>
                    </Button.Content>
                </Button>
                <Border Style="{StaticResource MainTabControlBorderStyle}"/>
                <Button Click="DeleteProduction" Style="{DynamicResource MainTabControlButtonStyle}">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image  Source="/Promax.UI;component/Pictures/Icons/dushbin.png" Margin="5" />
                            <TextBlock Text="Sil" Padding="5"/>
                        </StackPanel>
                    </Button.Content>
                </Button>
                <Border Style="{StaticResource MainTabControlBorderStyle}"/>
                <Button Name="IzgaraButon" Click="IzgaraButon_Click" Style="{DynamicResource MainTabControlButtonStyle}">
                    <Button.Content>
                        <Image  Source="/Promax.UI;component/Pictures/Icons/grid.png" Margin="5" />
                    </Button.Content>
                </Button>
                <Border Style="{StaticResource MainTabControlBorderStyle}"/>
                <Menu>
                    <MenuItem Template="{DynamicResource MainTabControlMenuButonStyle}" Height="35">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="/Promax.UI;component/Pictures/Icons/calendar.png" Width="20" Height="20" />
                                <Image Source="/Promax.UI;component/Pictures/Icons/right-arrow.png" Width="8" Height="8" Margin="2,2,2,2"/>
                            </StackPanel>
                        </MenuItem.Header>
                        <MenuItem IsCheckable="True" Click="BugünClicked" Header="_Bugün" Template="{DynamicResource MenuItemPopUpStyle}" IsChecked="{Binding Bugün, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:StoklarSayfası}}}" />
                        <MenuItem IsCheckable="True" Click="BuHaftaClicked" Header="_Bu Hafta" Template="{DynamicResource MenuItemPopUpStyle}" IsChecked="{Binding BuHafta, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:StoklarSayfası}}}"/>
                        <MenuItem IsCheckable="True" Click="BuAyClicked" Header="Bu Ay" Template="{DynamicResource MenuItemPopUpStyle}" IsChecked="{Binding BuAy, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:StoklarSayfası}}}"/>
                        <MenuItem IsCheckable="True" Click="BuYılClicked" Header="Bu Yıl" Template="{DynamicResource MenuItemPopUpStyle}" IsChecked="{Binding BuYıl, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:StoklarSayfası}}}" />
                        <MenuItem IsCheckable="True" Click="TümüClicked" Header="Tümü" Template="{DynamicResource MenuItemPopUpStyle}" IsChecked="{Binding Tümü, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:StoklarSayfası}}}"/>
                    </MenuItem>
                </Menu>
                <Grid Width="100">
                    <DatePicker SelectedDate="{Binding Path=FirstDate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}" Height="25" KeyDown="DatePicker_KeyDown" CalendarClosed="DatePicker_CalendarClosed"/>
                </Grid>
                <Grid Width="100">
                    <DatePicker SelectedDate="{Binding Path=LastDate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}" Height="25" KeyDown="DatePicker_KeyDown" CalendarClosed="DatePicker_CalendarClosed"/>
                </Grid>
                <Border Style="{StaticResource MainTabControlBorderStyle}"/>
                <Button Click="RefreshProducts" Style="{DynamicResource MainTabControlButtonStyle}">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Image  Source="/Promax.UI;component/Pictures/Icons/reload.png" Margin="5" />
                            <TextBlock Text="Yenile" Padding="5"/>
                        </StackPanel>
                    </Button.Content>
                </Button>
                <Border Style="{StaticResource MainTabControlBorderStyle}"/>
                <Menu VerticalAlignment="Center">
                    <MenuItem Template="{DynamicResource MainTabControlMenuButonStyle}">
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <Image Source="/Promax.UI;component/Pictures/Icons/printer.png" Width="20" Height="20" />
                                <TextBlock Text="Yazdır" Padding="5,0,5,0"/>
                                <Image Source="/Promax.UI;component/Pictures/Icons/right-arrow.png" Width="8" Height="8"/>
                            </StackPanel>
                        </MenuItem.Header>
                        <MenuItem IsCheckable="True" Header="_İrsaliye Yazdır" Template="{DynamicResource MenuItemPopUpStyle}" />
                        <MenuItem Header="Excel Dosyası" IsCheckable="True" Template="{DynamicResource MenuItemPopUpStyle}" >
                            <MenuItem.Icon>
                                <Image Source="/Promax.UI;component/Pictures/Icons/excel.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="Dizayn" Template="{DynamicResource PopUpMenuItemtemplate}">
                            <MenuItem Header="İrsaliye Dizayn" Template="{DynamicResource YanaAcilanMenuItem}"/>
                        </MenuItem>
                    </MenuItem>
                </Menu>
            </StackPanel>
            <DataGrid x:Name="productDataGrid" SelectedItem="{Binding Path=selectedProduct, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Page}}" Background="White" Grid.Row="2"  Width="{Binding Width, ElementName=grid, Mode=OneWay}" HeadersVisibility="All" AutoGenerateColumns="False" IsReadOnly="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanUserAddRows="False" CanUserDeleteRows="False">
                <DataGrid.Columns>
                    <DataGridTextColumn x:Name="sutun0"  Binding="{Binding Path=ProductDate, StringFormat=Date: {0:dd.MM.yyyy}}" Header="TARİH"/>
                    <DataGridTextColumn x:Name="sutun1"  Binding="{Binding Path=ProductTime, StringFormat=Time: {0:HH:mm:ss}}" Header="SAAT"/>
                    <DataGridTextColumn x:Name="sutun2"  Binding="{Binding Path=BillNumber}" Header="BELGE NO"/>
                    <DataGridTextColumn x:Name="sutun3"  Binding="{Binding Path=Client.ClientName}" Header="MÜŞTERİ ADI"/>
                    <DataGridTextColumn x:Name="sutun4"  Binding="{Binding Path=Site.SiteName}" Header="ŞANTİYE ADI"/>
                    <DataGridTextColumn x:Name="sutun5"  Binding="{Binding Path=Recipe.RecipeName}" Header="REÇETE ADI"/>
                    <DataGridTextColumn x:Name="sutun6"  Binding="{Binding Path=ServiceCategory.CatName}" Header="SERVİS SINIFI"/>
                    <DataGridTextColumn x:Name="sutun7"  Binding="{Binding Path=SelfService.ServiceName}" Header="SANTRAL SERVİS"/>
                    <DataGridTextColumn x:Name="sutun8"  Binding="{Binding Path=MixerService.ServiceName}" Header="MİKSERLİ SERVİS"/>
                    <DataGridTextColumn x:Name="sutun9"  Binding="{Binding Path=PumpService.ServiceName}" Header="POMPALI SERVİS"/>
                    <DataGridTextColumn x:Name="sutun10" Binding="{Binding Path=User.UserName}" Header="OPERATÖR"/>
                    <DataGridTextColumn x:Name="sutun11" Binding="{Binding Path=Shipped}" Header="SEVK"/>
                    <DataGridTextColumn x:Name="sutun12" Binding="{Binding Path=Returned}" Header="İADE"/>
                    <DataGridTextColumn x:Name="sutun13" Binding="{Binding Path=Delivered}" Header="TESLİM"/>
                </DataGrid.Columns>
            </DataGrid>
            <Grid Grid.Row="3" Height="35" Background="#FFF0F0F0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding Width.DisplayValue, ElementName=sutun0, Mode=OneWay}"/>
                    <ColumnDefinition Width="{Binding Width.DisplayValue, ElementName=sutun1, Mode=OneWay}"/>
                    <ColumnDefinition Width="{Binding Width.DisplayValue, ElementName=sutun2, Mode=OneWay}"/>
                    <ColumnDefinition Width="{Binding Width.DisplayValue, ElementName=sutun3, Mode=OneWay}"/>
                    <ColumnDefinition Width="{Binding Width.DisplayValue, ElementName=sutun4, Mode=OneWay}"/>
                    <ColumnDefinition Width="{Binding Width.DisplayValue, ElementName=sutun5, Mode=OneWay}"/>
                    <ColumnDefinition Width="{Binding Width.DisplayValue, ElementName=sutun6, Mode=OneWay}"/>
                    <ColumnDefinition Width="{Binding Width.DisplayValue, ElementName=sutun7, Mode=OneWay}"/>
                    <ColumnDefinition Width="{Binding Width.DisplayValue, ElementName=sutun8, Mode=OneWay}"/>
                    <ColumnDefinition Width="{Binding Width.DisplayValue, ElementName=sutun9, Mode=OneWay}"/>
                    <ColumnDefinition Width="{Binding Width.DisplayValue, ElementName=sutun10, Mode=OneWay}"/>
                    <ColumnDefinition Width="{Binding Width.DisplayValue, ElementName=sutun11, Mode=OneWay}"/>
                    <ColumnDefinition Width="{Binding Width.DisplayValue, ElementName=sutun12, Mode=OneWay}"/>
                    <ColumnDefinition Width="{Binding Width.DisplayValue, ElementName=sutun13, Mode=OneWay}"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="35"/>
                </Grid.RowDefinitions>
                <TextBox Grid.Column="11" Margin="3" />
                <TextBox Grid.Column="12" Margin="3"/>
                <TextBox Grid.Column="13" Margin="3"/>

            </Grid>
        </Grid>
        <GridSplitter Name="spliter" Background="#FFC3C3C3" Grid.Row="1" Height="5" HorizontalAlignment="Stretch"/>
        <Grid Name="Grid2" Grid.Row="2" Background="White" MinHeight="120">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" MinHeight="120" >
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="30"/>
                </Grid.RowDefinitions>
                <DataGrid Grid.Row="0" x:Name="datagrid2" ItemsSource="{Binding}" AutoGenerateColumns="False" Background="White" MaxColumnWidth="130" HeadersVisibility="Column" IsReadOnly="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanUserReorderColumns="False">
                </DataGrid>
                <Grid Grid.Row="1" Background="#FFF0F0F0">
                    <DataGrid Grid.Row="0" x:Name="datagrid3" HeadersVisibility="None" ItemsSource="{Binding}" AutoGenerateColumns="False" Background="White" MaxColumnWidth="130" IsReadOnly="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                    </DataGrid>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Page>
